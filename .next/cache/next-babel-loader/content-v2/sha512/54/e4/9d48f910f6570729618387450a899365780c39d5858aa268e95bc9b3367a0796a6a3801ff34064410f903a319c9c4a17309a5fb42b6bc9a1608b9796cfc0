{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/ammar/blockchain/ethereum complete dev guide/kickstart/components/ContributeForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form, Input, Message } from 'semantic-ui-react';\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\nexport default function ContributeForm(_ref) {\n  _s();\n\n  var address = _ref.address;\n\n  var _useState = useState(''),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var campaign, accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return new Campaign(address);\n\n            case 3:\n              campaign = _context.sent;\n              _context.prev = 4;\n              _context.next = 7;\n              return web3.eth.getAccounts();\n\n            case 7:\n              accounts = _context.sent;\n              _context.next = 10;\n              return campaign.methods.contribute().send({\n                from: accounts[0],\n                value: web3.utils.toWei(value, 'ether')\n              });\n\n            case 10:\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](4);\n              console.log(_context.t0, \"eee\");\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 12]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount to Contribute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: value,\n        onChange: function onChange(e) {\n          return setValue(e.target.value);\n        },\n        label: \"ether\",\n        labelPosition: \"right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      primary: true,\n      children: \"Contribute!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContributeForm, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c = ContributeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContributeForm\");","map":{"version":3,"sources":["/home/ammar/blockchain/ethereum complete dev guide/kickstart/components/ContributeForm.js"],"names":["React","useState","Button","Form","Input","Message","Campaign","web3","ContributeForm","address","value","setValue","onSubmit","e","preventDefault","campaign","eth","getAccounts","accounts","methods","contribute","send","from","utils","toWei","console","log","target"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,OAA9B,QAA8C,mBAA9C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,eAAe,SAASC,cAAT,OAAkC;AAAA;;AAAA,MAATC,OAAS,QAATA,OAAS;;AAAA,kBACnBR,QAAQ,CAAC,EAAD,CADW;AAAA,MACtCS,KADsC;AAAA,MAC/BC,QAD+B;;AAI7C,MAAMC,QAAQ;AAAA,yEAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbA,cAAAA,CAAC,CAACC,cAAF;AADa;AAAA,qBAEU,IAAIR,QAAJ,CAAaG,OAAb,CAFV;;AAAA;AAEPM,cAAAA,QAFO;AAAA;AAAA;AAAA,qBAIcR,IAAI,CAACS,GAAL,CAASC,WAAT,EAJd;;AAAA;AAIHC,cAAAA,QAJG;AAAA;AAAA,qBAKHH,QAAQ,CAACI,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACrCC,gBAAAA,IAAI,EAAEJ,QAAQ,CAAC,CAAD,CADuB;AAErCR,gBAAAA,KAAK,EAAEH,IAAI,CAACgB,KAAL,CAAWC,KAAX,CAAiBd,KAAjB,EAAwB,OAAxB;AAF8B,eAAnC,CALG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWTe,cAAAA,OAAO,CAACC,GAAR,cAAiB,KAAjB;;AAXS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARd,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAeA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEA,QAAhB;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AACI,QAAA,KAAK,EAAEF,KADX;AAEI,QAAA,QAAQ,EAAE,kBAACG,CAAD;AAAA,iBAAOF,QAAQ,CAACE,CAAC,CAACc,MAAF,CAASjB,KAAV,CAAf;AAAA,SAFd;AAGI,QAAA,KAAK,EAAC,OAHV;AAII,QAAA,aAAa,EAAC;AAJlB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAjCuBF,c;;KAAAA,c","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form, Input, Message, } from 'semantic-ui-react';\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\n\nexport default function ContributeForm({address}){\n    const [value, setValue] = useState('');\n\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        const campaign = await new Campaign(address);\n        try{\n            const accounts = await web3.eth.getAccounts();\n            await campaign.methods.contribute().send({\n                from: accounts[0],\n                value: web3.utils.toWei(value, 'ether')\n            })\n        }\n        catch(err){\n            console.log(err, \"eee\");\n        }\n    }\n\n    return(\n        <Form onSubmit={onSubmit}>\n            <Form.Field>\n                <label>Amount to Contribute</label>\n                <Input \n                    value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                    label=\"ether\"\n                    labelPosition=\"right\"\n                />\n            </Form.Field>\n            <Button primary>Contribute!</Button>\n        </Form>\n    );\n}"]},"metadata":{},"sourceType":"module"}