{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/ammar/blockchain/ethereum complete dev guide/kickstart/components/RequestRow.js\";\nimport React from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/campaign';\nexport default function RequestRow(_ref) {\n  var request = _ref.request,\n      id = _ref.id,\n      address = _ref.address,\n      approversCount = _ref.approversCount;\n  var Row = Table.Row,\n      Cell = Table.Cell;\n\n  var onApprove = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var campaign, accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              campaign = Campaign(address);\n              _context.prev = 1;\n              _context.next = 4;\n              return web3.eth.getAccounts();\n\n            case 4:\n              accounts = _context.sent;\n              console.log(accounts);\n              _context.next = 8;\n              return campaign.methods.approveRequest(id).send({\n                from: accounts[0]\n              });\n\n            case 8:\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 10]]);\n    }));\n\n    return function onApprove() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onFinalize = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var campaign, accounts;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              campaign = Campaign(address);\n              _context2.prev = 1;\n              _context2.next = 4;\n              return web3.eth.getAccounts();\n\n            case 4:\n              accounts = _context2.sent;\n              console.log(accounts);\n              _context2.next = 8;\n              return campaign.methods.finalizeRequest(id).send({\n                from: accounts[0]\n              });\n\n            case 8:\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 10]]);\n    }));\n\n    return function onFinalize() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Cell, {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: request.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: web3.utils.fromWei(request.value, 'ether')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: request.recipient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: \"\".concat(request.approvalCount, \"/\").concat(approversCount)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"green\",\n        basic: true,\n        onClick: onApprove,\n        children: \"Approve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"teal\",\n        basic: true,\n        onClick: onFinalize,\n        children: \"Finalize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_c = RequestRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestRow\");","map":{"version":3,"sources":["/home/ammar/blockchain/ethereum complete dev guide/kickstart/components/RequestRow.js"],"names":["React","Table","Button","web3","Campaign","RequestRow","request","id","address","approversCount","Row","Cell","onApprove","campaign","eth","getAccounts","accounts","console","log","methods","approveRequest","send","from","onFinalize","finalizeRequest","description","utils","fromWei","value","recipient","approvalCount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/campaign';\n\nexport default function RequestRow({request, id, address, approversCount}){\n    const { Row, Cell } = Table;\n    const onApprove = async () => {\n        const campaign = Campaign(address);\n        try{\n            const accounts = await web3.eth.getAccounts();\n            console.log(accounts);\n            await campaign.methods.approveRequest(id).send({\n                from : accounts[0]\n            })\n        }catch(err){\n            console.log(err);\n        }\n    }\n\n    const onFinalize = async () => {\n        const campaign = Campaign(address);\n        try{\n            const accounts = await web3.eth.getAccounts();\n            console.log(accounts);\n            await campaign.methods.finalizeRequest(id).send({\n                from : accounts[0]\n            })\n        }catch(err){\n            console.log(err);\n        }\n    }\n    return(\n        <Row>\n            <Cell>{id}</Cell>\n            <Cell>{request.description}</Cell>\n            <Cell>{web3.utils.fromWei(request.value, 'ether')}</Cell>\n            <Cell>{request.recipient}</Cell>\n            <Cell>{`${request.approvalCount}/${approversCount}`}</Cell>\n            <Cell>\n                <Button color=\"green\" basic onClick={onApprove}>Approve</Button>\n            </Cell>\n            <Cell>\n                <Button color=\"teal\" basic onClick={onFinalize}>Finalize</Button>\n            </Cell>\n\n        </Row>\n    );\n}"]},"metadata":{},"sourceType":"module"}