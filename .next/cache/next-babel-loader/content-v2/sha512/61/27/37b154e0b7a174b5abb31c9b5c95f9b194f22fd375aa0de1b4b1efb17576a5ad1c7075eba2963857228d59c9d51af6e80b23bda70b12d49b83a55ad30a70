{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ammar/blockchain/ethereum complete dev guide/kickstart/pages/campaigns/requests/new.js\";\nimport React, { useState } from 'react';\nimport Campaign from '../../../ethereum/campaign';\nimport web3 from '../../../ethereum/web3';\nimport { Link, Router } from '../../../routes';\nimport Layout from '../../../components/Layout';\nimport { Button, Form, Input, Message } from 'semantic-ui-react';\nexport default function RequestNew({\n  address\n}) {\n  const {\n    0: value,\n    1: setValue\n  } = useState('');\n  const {\n    0: desc,\n    1: setDesc\n  } = useState('');\n  const {\n    0: recip,\n    1: setRec\n  } = useState('');\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const campaign = Campaign(address);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.createRequest(desc, web3.utils.toWei(value, 'ether', recip)).send({\n        from: accounts[0]\n      });\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create a Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: desc,\n          onChange: e => setDesc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Value in Ether\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: value,\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Recipient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: recip,\n          onChange: e => setRec(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        children: \" Create!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\nRequestNew.getInitialProps = async props => {\n  const {\n    address\n  } = props.query;\n  return {\n    address\n  };\n};","map":{"version":3,"sources":["/home/ammar/blockchain/ethereum complete dev guide/kickstart/pages/campaigns/requests/new.js"],"names":["React","useState","Campaign","web3","Link","Router","Layout","Button","Form","Input","Message","RequestNew","address","value","setValue","desc","setDesc","recip","setRec","onSubmit","e","preventDefault","campaign","accounts","eth","getAccounts","methods","createRequest","utils","toWei","send","from","err","target","getInitialProps","props","query"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Campaign from '../../../ethereum/campaign';\nimport web3 from '../../../ethereum/web3';\nimport { Link, Router } from '../../../routes';\nimport Layout from '../../../components/Layout';\nimport { Button, Form, Input, Message } from 'semantic-ui-react';\n\nexport default function RequestNew({address}) {\n    const [value, setValue] = useState('');\n    const [desc, setDesc] = useState('');\n    const [recip, setRec] = useState('');\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n\n        const campaign = Campaign(address);\n        try {\n            const accounts = await web3.eth.getAccounts();\n            await campaign.methods.createRequest(desc, web3.utils.toWei(value, 'ether', recip))\n            .send({ from: accounts[0]})\n        }catch (err){\n\n        }\n    }\n\n\n    return(\n        <Layout>\n            <h3>Create a Request</h3>\n            <Form onSubmit={onSubmit}>\n                <Form.Field>\n                    <label>Description</label>\n                    <Input \n                        value={desc}\n                        onChange={e => setDesc(e.target.value)}\n                    />\n                </Form.Field>\n\n                <Form.Field>\n                    <label>Value in Ether</label>\n                    <Input \n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                    \n                    />\n                \n                </Form.Field>\n\n                <Form.Field>\n                    <label>Recipient</label>\n                    <Input \n                        value={recip}\n                        onChange={e => setRec(e.target.value)}                \n                    />\n                \n                </Form.Field>\n\n                <Button primary> Create!</Button>\n            </Form>\n        </Layout>\n    );\n}\nRequestNew.getInitialProps = async (props) => {\n    const { address } = props.query;\n\n    return { address }\n}"]},"metadata":{},"sourceType":"module"}