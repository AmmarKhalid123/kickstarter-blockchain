{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ammar/blockchain/ethereum complete dev guide/kickstart/pages/campaigns/show.js\";\nimport React from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport { Card } from 'semantic-ui-react';\n\nfunction Show(_ref) {\n  var _this = this;\n\n  var manager = _ref.manager,\n      balance = _ref.balance,\n      minimumContribution = _ref.minimumContribution,\n      requestsCount = _ref.requestsCount,\n      approversCount = _ref.approversCount;\n\n  var renderCards = function renderCards() {\n    var items = [{\n      header: manager,\n      meta: 'Address of Manager',\n      description: 'The manager created this campaign and can create request to withdraw money!'\n    }];\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Campaign Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), renderCards()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Show;\n\nShow.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n    var campaign, summary;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            campaign = Campaign(props.query.address);\n            _context.next = 3;\n            return campaign.methods.getSummary().call();\n\n          case 3:\n            summary = _context.sent;\n            console.log(summary);\n            return _context.abrupt(\"return\", {\n              minimumContribution: summary['0'],\n              balance: summary['1'],\n              requestsCount: summary['2'],\n              approversCount: summary['3'],\n              manager: summary['4']\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Show;\n\nvar _c;\n\n$RefreshReg$(_c, \"Show\");","map":{"version":3,"sources":["/home/ammar/blockchain/ethereum complete dev guide/kickstart/pages/campaigns/show.js"],"names":["React","Layout","Campaign","Card","Show","manager","balance","minimumContribution","requestsCount","approversCount","renderCards","items","header","meta","description","getInitialProps","props","campaign","query","address","methods","getSummary","call","summary","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,IAAT,QAAsB,mBAAtB;;AAEA,SAASC,IAAT,OAAqF;AAAA;;AAAA,MAAtEC,OAAsE,QAAtEA,OAAsE;AAAA,MAA7DC,OAA6D,QAA7DA,OAA6D;AAAA,MAApDC,mBAAoD,QAApDA,mBAAoD;AAAA,MAA/BC,aAA+B,QAA/BA,aAA+B;AAAA,MAAhBC,cAAgB,QAAhBA,cAAgB;;AAEjF,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,QAAMC,KAAK,GAAG,CACV;AACIC,MAAAA,MAAM,EAAEP,OADZ;AAEIQ,MAAAA,IAAI,EAAE,oBAFV;AAGIC,MAAAA,WAAW,EAAE;AAHjB,KADU,CAAd;AAOA,wBAAO,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEH;AAAnB;AAAA;AAAA;AAAA;AAAA,aAAP;AACH,GATD;;AAWA,sBACI,QAAC,MAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKD,WAAW,EAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;KAnBQN,I;;AAqBTA,IAAI,CAACW,eAAL;AAAA,uEAAuB,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,YAAAA,QADa,GACFf,QAAQ,CAACc,KAAK,CAACE,KAAN,CAAYC,OAAb,CADN;AAAA;AAAA,mBAEGF,QAAQ,CAACG,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAFH;;AAAA;AAEbC,YAAAA,OAFa;AAGnBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAHmB,6CAIZ;AACHhB,cAAAA,mBAAmB,EAAEgB,OAAO,CAAC,GAAD,CADzB;AAEHjB,cAAAA,OAAO,EAAEiB,OAAO,CAAC,GAAD,CAFb;AAGHf,cAAAA,aAAa,EAAEe,OAAO,CAAC,GAAD,CAHnB;AAIHd,cAAAA,cAAc,EAAEc,OAAO,CAAC,GAAD,CAJpB;AAKHlB,cAAAA,OAAO,EAAEkB,OAAO,CAAC,GAAD;AALb,aAJY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAaA,eAAenB,IAAf","sourcesContent":["import React from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport { Card  } from 'semantic-ui-react';\n\nfunction Show({manager, balance, minimumContribution, requestsCount, approversCount}){\n    \n    const renderCards = () => {\n        const items = [\n            {\n                header: manager,\n                meta: 'Address of Manager',\n                description: 'The manager created this campaign and can create request to withdraw money!'\n            }\n        ];\n        return <Card.Group items={items} />\n    };\n    \n    return(\n        <Layout>\n            <h3>Campaign Show</h3>\n            {renderCards()}\n        </Layout>\n    );\n}\n\nShow.getInitialProps = async (props) => {\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n    console.log(summary);\n    return {\n        minimumContribution: summary['0'],\n        balance: summary['1'],\n        requestsCount: summary['2'],\n        approversCount: summary['3'],\n        manager: summary['4'],\n    };\n}\n\nexport default Show;"]},"metadata":{},"sourceType":"module"}