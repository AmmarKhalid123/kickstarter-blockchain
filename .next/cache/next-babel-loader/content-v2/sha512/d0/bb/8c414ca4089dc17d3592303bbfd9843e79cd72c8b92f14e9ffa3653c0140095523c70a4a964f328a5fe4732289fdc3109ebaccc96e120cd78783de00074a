{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/ammar/blockchain/ethereum complete dev guide/kickstart/pages/campaigns/new.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\nexport default function New() {\n  _s();\n\n  var _useState = useState(''),\n      minCont = _useState[0],\n      setMinCont = _useState[1];\n\n  var _useState2 = useState(''),\n      errMess = _useState2[0],\n      setErr = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              setLoading(true);\n              _context.prev = 2;\n              _context.next = 5;\n              return web3.eth.getAccounts();\n\n            case 5:\n              accounts = _context.sent;\n              _context.next = 8;\n              return factory.methods.createCampaign(minCont).send({\n                from: accounts[0]\n              });\n\n            case 8:\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              setErr(_context.t0.message);\n\n            case 13:\n              setLoading(false);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 10]]);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a Camapign\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      error: !!errMess,\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Minimum Contribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: \"wei\",\n          labelPosition: \"right\",\n          value: minCont,\n          onChange: function onChange(e) {\n            return setMinCont(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: errMess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        loading: loading,\n        primary: true,\n        children: \"Create!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(New, \"Vu02kTPP2sFJWckIAWSr6//l0Z4=\");\n\n_c = New;\n\nvar _c;\n\n$RefreshReg$(_c, \"New\");","map":{"version":3,"sources":["/home/ammar/blockchain/ethereum complete dev guide/kickstart/pages/campaigns/new.js"],"names":["React","useState","Layout","Form","Button","Input","Message","factory","web3","New","minCont","setMinCont","errMess","setErr","loading","setLoading","onSubmit","event","preventDefault","eth","getAccounts","accounts","methods","createCampaign","send","from","message","e","target","value"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,QAA6C,mBAA7C;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AAEA,eAAe,SAASC,GAAT,GAAc;AAAA;;AAAA,kBACKR,QAAQ,CAAC,EAAD,CADb;AAAA,MAClBS,OADkB;AAAA,MACTC,UADS;;AAAA,mBAECV,QAAQ,CAAC,EAAD,CAFT;AAAA,MAElBW,OAFkB;AAAA,MAETC,MAFS;;AAAA,mBAGKZ,QAAQ,CAAC,KAAD,CAHb;AAAA,MAGlBa,OAHkB;AAAA,MAGTC,UAHS;;AAKzB,MAAMC,QAAQ;AAAA,wEAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbA,cAAAA,KAAK,CAACC,cAAN;AACAH,cAAAA,UAAU,CAAC,IAAD,CAAV;AAFa;AAAA;AAAA,qBAIcP,IAAI,CAACW,GAAL,CAASC,WAAT,EAJd;;AAAA;AAIHC,cAAAA,QAJG;AAAA;AAAA,qBAKHd,OAAO,CAACe,OAAR,CAAgBC,cAAhB,CAA+Bb,OAA/B,EACLc,IADK,CACA;AACFC,gBAAAA,IAAI,EAAEJ,QAAQ,CAAC,CAAD;AADZ,eADA,CALG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWTR,cAAAA,MAAM,CAAC,YAAIa,OAAL,CAAN;;AAXS;AAabX,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAba;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARC,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAgBA,sBACI,QAAC,MAAD;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAGA,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEA,QAAhB;AAA0B,MAAA,KAAK,EAAE,CAAC,CAACJ,OAAnC;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,KAAK,EAAC,KAAb;AAAmB,UAAA,aAAa,EAAC,OAAjC;AACI,UAAA,KAAK,EAAEF,OADX;AAEI,UAAA,QAAQ,EAAE,kBAAAiB,CAAC;AAAA,mBAAIhB,UAAU,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAA;AAFf;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,OAAD;AAAS,QAAA,KAAK,MAAd;AAAe,QAAA,MAAM,EAAC,OAAtB;AAA8B,QAAA,OAAO,EAAEjB;AAAvC;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEE,OAAjB;AAA0B,QAAA,OAAO,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAvCuBL,G;;KAAAA,G","sourcesContent":["import React, { useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\n\nexport default function New(){\n    const [minCont, setMinCont] = useState('');\n    const [errMess, setErr] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        setLoading(true);\n        try{\n            const accounts = await web3.eth.getAccounts();\n            await factory.methods.createCampaign(minCont)\n            .send({\n                from: accounts[0]\n            });    \n        }\n        catch(err){\n            setErr(err.message);\n        }\n        setLoading(false);\n    }\n\n    return(\n        <Layout>\n        <h1>Create a Camapign</h1>\n\n        <Form onSubmit={onSubmit} error={!!errMess}>\n            <Form.Field>\n                <label>Minimum Contribution</label>\n                <Input label=\"wei\" labelPosition=\"right\"\n                    value={minCont}\n                    onChange={e => setMinCont(e.target.value)}\n                />\n            </Form.Field>\n\n            <Message error header=\"Oops!\" content={errMess} />\n            <Button loading={loading} primary >Create!</Button>\n        </Form>\n        </Layout>\n    );\n}"]},"metadata":{},"sourceType":"module"}