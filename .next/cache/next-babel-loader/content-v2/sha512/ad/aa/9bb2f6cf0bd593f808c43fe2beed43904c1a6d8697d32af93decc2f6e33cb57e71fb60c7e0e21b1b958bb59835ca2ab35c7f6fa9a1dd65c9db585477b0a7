{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ammar/blockchain/ethereum complete dev guide/kickstart/components/RequestRow.js\";\nimport React from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/campaign';\nexport default function RequestRow({\n  request,\n  id,\n  address,\n  approversCount\n}) {\n  const {\n    Row,\n    Cell\n  } = Table;\n  const readyToFinalize = request.approvalCount > approversCount / 2;\n\n  const onApprove = async () => {\n    const campaign = Campaign(address);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n      await campaign.methods.approveRequest(id).send({\n        from: accounts[0]\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onFinalize = async () => {\n    const campaign = Campaign(address);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n      await campaign.methods.finalizeRequest(id).send({\n        from: accounts[0]\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    disabled: request.complete,\n    positive: readyToFinalize && !request.complete,\n    children: [/*#__PURE__*/_jsxDEV(Cell, {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: request.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: web3.utils.fromWei(request.value, 'ether')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: request.recipient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: `${request.approvalCount}/${approversCount}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: request.complete ? null : /*#__PURE__*/_jsxDEV(Button, {\n        color: \"green\",\n        basic: true,\n        onClick: onApprove,\n        children: \"Approve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: request.complete ? null : /*#__PURE__*/_jsxDEV(Button, {\n        color: \"teal\",\n        basic: true,\n        onClick: onFinalize,\n        children: \"Finalize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/ammar/blockchain/ethereum complete dev guide/kickstart/components/RequestRow.js"],"names":["React","Table","Button","web3","Campaign","RequestRow","request","id","address","approversCount","Row","Cell","readyToFinalize","approvalCount","onApprove","campaign","accounts","eth","getAccounts","console","log","methods","approveRequest","send","from","err","onFinalize","finalizeRequest","complete","description","utils","fromWei","value","recipient"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/campaign';\n\nexport default function RequestRow({request, id, address, approversCount}){\n    const { Row, Cell } = Table;\n\n    const readyToFinalize = request.approvalCount > approversCount/2;\n\n    const onApprove = async () => {\n        const campaign = Campaign(address);\n        try{\n            const accounts = await web3.eth.getAccounts();\n            console.log(accounts);\n            await campaign.methods.approveRequest(id).send({\n                from : accounts[0]\n            })\n        }catch(err){\n            console.log(err);\n        }\n    }\n\n    const onFinalize = async () => {\n        const campaign = Campaign(address);\n        try{\n            const accounts = await web3.eth.getAccounts();\n            console.log(accounts);\n            await campaign.methods.finalizeRequest(id).send({\n                from : accounts[0]\n            })\n        }catch(err){\n            console.log(err);\n        }\n    }\n    return(\n        <Row disabled={request.complete} positive={readyToFinalize && !request.complete}>\n            <Cell>{id}</Cell>\n            <Cell>{request.description}</Cell>\n            <Cell>{web3.utils.fromWei(request.value, 'ether')}</Cell>\n            <Cell>{request.recipient}</Cell>\n            <Cell>{`${request.approvalCount}/${approversCount}`}</Cell>\n            <Cell>\n                {request.complete ? null : (\n                    <Button color=\"green\" basic onClick={onApprove}>Approve</Button>\n                )\n                }\n            </Cell>\n            <Cell>\n                {request.complete ? null : (\n                    <Button color=\"teal\" basic onClick={onFinalize}>Finalize</Button>\n                )}\n            </Cell>\n\n        </Row>\n    );\n}"]},"metadata":{},"sourceType":"module"}